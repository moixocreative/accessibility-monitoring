name: Create release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
      PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium-browser
      # SMTP Configuration via Secrets
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASS: ${{ secrets.SMTP_PASS }}
      SMTP_FROM: ${{ secrets.SMTP_FROM }}
      # Email Configuration via Secrets
      ALERT_EMAIL: ${{ secrets.ALERT_EMAIL }}
      EMERGENCY_EMAIL: ${{ secrets.EMERGENCY_EMAIL }}
      AUTHORITY_EMAIL: ${{ secrets.AUTHORITY_EMAIL }}

    steps:
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'

    - name: Setup module dependencies cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          ~/.cache/puppeteer
        key: Linux-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          Linux-node-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y chromium-browser

    - name: Install module dependencies
      run: |
        export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
        yarn install --frozen-lockfile --network-timeout 100000

    - name: Get changelog entries
      id: changelog
      uses: mindsers/changelog-reader-action@v1
      with:
        versionFile: 'CHANGELOG.md'
        version: ${{ steps.get_version.outputs.VERSION }}

    - name: Accessibility Pre-release Check
      run: |
        yarn audit:wcag
        yarn audit:portfolio
        yarn emergency --validate

    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: ${{ steps.changelog.outputs.clean_changelog }}
        draft: false
        prerelease: false

    - name: Generate Release Report
      run: |
        yarn report --release --version ${{ steps.get_version.outputs.VERSION }}
        yarn emergency --report

    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: accessibility-release-${{ steps.get_version.outputs.VERSION }}
        path: |
          reports/
          logs/
        retention-days: 90 